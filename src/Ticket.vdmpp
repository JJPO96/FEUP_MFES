class Ticket

/*

	Defines a ticket for a fashion show.
  J. Oliveira, FEUP, MFES, 2017/18.

*/

instance variables
	public holder : Person;
	public show : FashionShow;
  public startDate : FSUtils`date;
  public endDate : FSUtils`date;
  public type : FSUtils`ticketType;

-- invariants
inv FSUtils`isOldestDate(startDate, endDate);
inv FSUtils`isOldestDate(show.startDate, startDate) or show.startDate = startDate;
inv FSUtils`isOldestDate(endDate, show.endDate) or endDate = show.endDate;
inv if type = <Designer> then holder.isDesigner else true;
 
operations
-- constructor
	public Ticket : Person * FashionShow * FSUtils`date * FSUtils`date * FSUtils`ticketType ==> Ticket
		Ticket(p, s, sD, eD, t) == (
			holder := p;
 			atomic(show := s;
 			startDate := sD;
 			endDate := eD;);
			type := t;
			s.addPersonAttending(p);
			p.addTicketShow(self,s);
			return self;	
		);
		
-- set ticket holder
	public setHolder : Person ==> ()
		setHolder(p) ==
			holder := p;

--set fashion show
	public setShow : FashionShow ==> ()
		setShow(s) ==
			show := s;
			
-- set start date
	public setStartDate : FSUtils`date ==> ()
		setStartDate(d) ==
			startDate := d;
			
-- set end date
	public setEndDate : FSUtils`date ==> ()
		setEndDate(d) ==
			endDate := d;
			
-- set ticket type
	public setType : FSUtils`ticketType ==> ()
		setType(t) ==
			type := t;

end Ticket
