class Room

/*

	Defines a room, that will host an event of a fashion show.
  J. Oliveira, FEUP, MFES, 2017/18.

*/


instance variables
  public name : FSUtils`string;
  public localization : FSUtils`string;
	public capacity : nat1;
	public occupants : seq of Person;
	
-- invariants
  inv len occupants <= capacity;
  
operations
-- constructor
	public Room : FSUtils`string * FSUtils`string * nat1 ==> Room
		Room(n, local, cap) == (
			name := n;
			localization	:= local;
			capacity := cap;
			occupants := [];
			return self;
		);
		
-- set name
 	public setName : FSUtils`string ==> ()
 		setName(n) ==
 			name := n;
 			
-- set localization
 	public setLocalization : FSUtils`string ==> ()
 		setLocalization(l) ==
 			localization := l;
 			
-- set capacity
 	public setCapacity : nat1 ==> ()
 		setCapacity(c) ==
 			capacity := c
 			pre c >= len occupants;
 			
-- add a person to the occupants list
	public addOccupant : Person ==> ()
		addOccupant(p) ==
			occupants := occupants ^ [p]
			pre len occupants < capacity
			post len occupants <= capacity and 
							 occupants = occupants~ ^ [p];
			
-- make the room empty
	public emptyTheRoom : () ==> ()
		emptyTheRoom() ==
			occupants := []
			post occupants = [];
 			
end Room
