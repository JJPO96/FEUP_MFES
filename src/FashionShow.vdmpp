class FashionShow
instance variables 
	public name : Utils`string;
  public place : Utils`string;
  public startDate : Utils`date;
  public endDate : Utils`date;
  public events : seq of (Event);

-- invariants
inv Utils`isOldestDate(startDate, endDate);
inv not exists e1, e2 in set elems events & (e1 <> e2 and e1.place = e2.place and Utils`coincDate(e1.startDate,e1.endDate, e2.startDate, e2.endDate));

operations
-- constructor
	public FashionShow : Utils`string * Utils`string * Utils`date * Utils`date ==> FashionShow
		FashionShow(n, p, sD, eD) == (
			name := n;
			place := p;
			startDate := sD;
			endDate := eD;
			events := [];
			return self;		
		);
		
-- set name
 	public setName : Utils`string ==> ()
 		setName(n) ==
 			name := n;
 			
-- set place
 	public setPlace : Utils`string ==> ()
 		setPlace(p) ==
 			place := p;
			
-- set start date
	public setStartDate : Utils`date ==> ()
		setStartDate(d) ==
			startDate := d;
			
-- set end date
	public setEndDate : Utils`date ==> ()
		setEndDate(d) ==
			endDate := d;
			
-- set events
	public setEvents : seq of (Event) ==> ()
		setEvents(e) ==
			events := e;
			
-- add event
	public addEvent : Event ==> ()
		addEvent(e) ==
			events := events ^ [e]
			post events = events~ ^ [e];

end FashionShow
